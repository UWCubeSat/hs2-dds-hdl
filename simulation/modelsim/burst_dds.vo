// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "11/20/2020 13:39:20"

// 
// Device: Altera 5M160ZT100C4 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module burst_dds (
	ADDR,
	DATA,
	SRAM_CLK,
	ADSC,
	ADSP,
	ADV,
	BWE,
	CE,
	DATA_P,
	GW,
	MODE,
	OE,
	ZZ,
	MOSI,
	MISO,
	SCKe,
	SPI_CE,
	TRIG,
	HS_CLK,
	CLOCK_50);
output 	[16:0] ADDR;
output 	[31:0] DATA;
output 	SRAM_CLK;
output 	ADSC;
output 	ADSP;
output 	ADV;
output 	BWE;
output 	[2:0] CE;
output 	[3:0] DATA_P;
output 	GW;
output 	MODE;
output 	OE;
output 	ZZ;
input 	MOSI;
output 	MISO;
input 	SCKe;
input 	SPI_CE;
input 	TRIG;
input 	HS_CLK;
input 	CLOCK_50;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("burst_dds_v.sdo");
// synopsys translate_on

wire \SCKe~combout ;
wire \SPI_CE~combout ;
wire \shift_counter[0]~9 ;
wire \shift_counter[0]~9COUT1_11 ;
wire \shift_counter[1]~1 ;
wire \shift_counter[1]~1COUT1_12 ;
wire \shift_counter[2]~3 ;
wire \shift_counter[2]~3COUT1_13 ;
wire \shift_counter[3]~5 ;
wire \shift_counter[3]~5COUT1_14 ;
wire \Equal0~0_combout ;
wire \HS_CLK~combout ;
wire \TRIG~combout ;
wire \always2~0 ;
wire \trig_last~regout ;
wire \ADDR~0_combout ;
wire \Equal1~0_combout ;
wire \addr_burst[0]~1 ;
wire \addr_burst[0]~1COUT1_35 ;
wire \ADDR~1_combout ;
wire \addr_burst[1]~3 ;
wire \addr_burst[1]~3COUT1_36 ;
wire \addr_counter[1]~1 ;
wire \addr_counter[1]~1COUT1_34 ;
wire \ADDR~2_combout ;
wire \addr_burst[2]~5 ;
wire \addr_counter[2]~3 ;
wire \addr_counter[2]~3COUT1_35 ;
wire \ADDR~3_combout ;
wire \addr_counter[3]~5 ;
wire \addr_burst[3]~7 ;
wire \addr_burst[3]~7COUT1_37 ;
wire \ADDR~4_combout ;
wire \addr_burst[4]~9 ;
wire \addr_burst[4]~9COUT1_38 ;
wire \addr_counter[4]~7 ;
wire \addr_counter[4]~7COUT1_36 ;
wire \ADDR~5_combout ;
wire \addr_counter[5]~9 ;
wire \addr_counter[5]~9COUT1_37 ;
wire \addr_burst[5]~11 ;
wire \addr_burst[5]~11COUT1_39 ;
wire \ADDR~6_combout ;
wire \addr_counter[6]~11 ;
wire \addr_counter[6]~11COUT1_38 ;
wire \addr_burst[6]~13 ;
wire \addr_burst[6]~13COUT1_40 ;
wire \ADDR~7_combout ;
wire \addr_burst[7]~15 ;
wire \addr_counter[7]~13 ;
wire \addr_counter[7]~13COUT1_39 ;
wire \ADDR~8_combout ;
wire \addr_counter[8]~15 ;
wire \addr_burst[8]~17 ;
wire \addr_burst[8]~17COUT1_41 ;
wire \ADDR~9_combout ;
wire \addr_burst[9]~19 ;
wire \addr_burst[9]~19COUT1_42 ;
wire \addr_counter[9]~17 ;
wire \addr_counter[9]~17COUT1_40 ;
wire \ADDR~10_combout ;
wire \addr_burst[10]~21 ;
wire \addr_burst[10]~21COUT1_43 ;
wire \addr_counter[10]~19 ;
wire \addr_counter[10]~19COUT1_41 ;
wire \ADDR~11_combout ;
wire \addr_counter[11]~21 ;
wire \addr_counter[11]~21COUT1_42 ;
wire \addr_burst[11]~23 ;
wire \addr_burst[11]~23COUT1_44 ;
wire \ADDR~12_combout ;
wire \addr_counter[12]~23 ;
wire \addr_counter[12]~23COUT1_43 ;
wire \addr_burst[12]~25 ;
wire \ADDR~13_combout ;
wire \addr_counter[13]~25 ;
wire \addr_burst[13]~27 ;
wire \addr_burst[13]~27COUT1_45 ;
wire \ADDR~14_combout ;
wire \addr_counter[14]~27 ;
wire \addr_counter[14]~27COUT1_44 ;
wire \addr_burst[14]~29 ;
wire \addr_burst[14]~29COUT1_46 ;
wire \ADDR~15_combout ;
wire \addr_burst[15]~31 ;
wire \addr_burst[15]~31COUT1_47 ;
wire \addr_counter[15]~29 ;
wire \addr_counter[15]~29COUT1_45 ;
wire \ADDR~16_combout ;
wire \GW~reg0_regout ;
wire \SRAM_CLK~0_combout ;
wire [16:0] addr_burst;
wire [16:0] addr_spi;
wire [16:0] addr_counter;
wire [4:0] shift_counter;


// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \SCKe~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\SCKe~combout ),
	.padio(SCKe));
// synopsys translate_off
defparam \SCKe~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_92,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \SPI_CE~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\SPI_CE~combout ),
	.padio(SPI_CE));
// synopsys translate_off
defparam \SPI_CE~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y3_N0
maxv_lcell \shift_counter[0] (
// Equation(s):
// shift_counter[0] = DFFEAS(((!shift_counter[0])), !GLOBAL(\SCKe~combout ), VCC, , , , , \SPI_CE~combout , )
// \shift_counter[0]~9  = CARRY(((shift_counter[0])))
// \shift_counter[0]~9COUT1_11  = CARRY(((shift_counter[0])))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(shift_counter[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\SPI_CE~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(shift_counter[0]),
	.cout(),
	.cout0(\shift_counter[0]~9 ),
	.cout1(\shift_counter[0]~9COUT1_11 ));
// synopsys translate_off
defparam \shift_counter[0] .lut_mask = "33cc";
defparam \shift_counter[0] .operation_mode = "arithmetic";
defparam \shift_counter[0] .output_mode = "reg_only";
defparam \shift_counter[0] .register_cascade_mode = "off";
defparam \shift_counter[0] .sum_lutc_input = "datac";
defparam \shift_counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N1
maxv_lcell \shift_counter[1] (
// Equation(s):
// shift_counter[1] = DFFEAS((shift_counter[1] $ ((\shift_counter[0]~9 ))), !GLOBAL(\SCKe~combout ), VCC, , , , , \SPI_CE~combout , )
// \shift_counter[1]~1  = CARRY(((!\shift_counter[0]~9 ) # (!shift_counter[1])))
// \shift_counter[1]~1COUT1_12  = CARRY(((!\shift_counter[0]~9COUT1_11 ) # (!shift_counter[1])))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(shift_counter[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\SPI_CE~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\shift_counter[0]~9 ),
	.cin1(\shift_counter[0]~9COUT1_11 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(shift_counter[1]),
	.cout(),
	.cout0(\shift_counter[1]~1 ),
	.cout1(\shift_counter[1]~1COUT1_12 ));
// synopsys translate_off
defparam \shift_counter[1] .cin0_used = "true";
defparam \shift_counter[1] .cin1_used = "true";
defparam \shift_counter[1] .lut_mask = "3c3f";
defparam \shift_counter[1] .operation_mode = "arithmetic";
defparam \shift_counter[1] .output_mode = "reg_only";
defparam \shift_counter[1] .register_cascade_mode = "off";
defparam \shift_counter[1] .sum_lutc_input = "cin";
defparam \shift_counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N2
maxv_lcell \shift_counter[2] (
// Equation(s):
// shift_counter[2] = DFFEAS((shift_counter[2] $ ((!\shift_counter[1]~1 ))), !GLOBAL(\SCKe~combout ), VCC, , , , , \SPI_CE~combout , )
// \shift_counter[2]~3  = CARRY(((shift_counter[2] & !\shift_counter[1]~1 )))
// \shift_counter[2]~3COUT1_13  = CARRY(((shift_counter[2] & !\shift_counter[1]~1COUT1_12 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(shift_counter[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\SPI_CE~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\shift_counter[1]~1 ),
	.cin1(\shift_counter[1]~1COUT1_12 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(shift_counter[2]),
	.cout(),
	.cout0(\shift_counter[2]~3 ),
	.cout1(\shift_counter[2]~3COUT1_13 ));
// synopsys translate_off
defparam \shift_counter[2] .cin0_used = "true";
defparam \shift_counter[2] .cin1_used = "true";
defparam \shift_counter[2] .lut_mask = "c30c";
defparam \shift_counter[2] .operation_mode = "arithmetic";
defparam \shift_counter[2] .output_mode = "reg_only";
defparam \shift_counter[2] .register_cascade_mode = "off";
defparam \shift_counter[2] .sum_lutc_input = "cin";
defparam \shift_counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N3
maxv_lcell \shift_counter[3] (
// Equation(s):
// shift_counter[3] = DFFEAS(shift_counter[3] $ ((((\shift_counter[2]~3 )))), !GLOBAL(\SCKe~combout ), VCC, , , , , \SPI_CE~combout , )
// \shift_counter[3]~5  = CARRY(((!\shift_counter[2]~3 )) # (!shift_counter[3]))
// \shift_counter[3]~5COUT1_14  = CARRY(((!\shift_counter[2]~3COUT1_13 )) # (!shift_counter[3]))

	.clk(!\SCKe~combout ),
	.dataa(shift_counter[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\SPI_CE~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\shift_counter[2]~3 ),
	.cin1(\shift_counter[2]~3COUT1_13 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(shift_counter[3]),
	.cout(),
	.cout0(\shift_counter[3]~5 ),
	.cout1(\shift_counter[3]~5COUT1_14 ));
// synopsys translate_off
defparam \shift_counter[3] .cin0_used = "true";
defparam \shift_counter[3] .cin1_used = "true";
defparam \shift_counter[3] .lut_mask = "5a5f";
defparam \shift_counter[3] .operation_mode = "arithmetic";
defparam \shift_counter[3] .output_mode = "reg_only";
defparam \shift_counter[3] .register_cascade_mode = "off";
defparam \shift_counter[3] .sum_lutc_input = "cin";
defparam \shift_counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N4
maxv_lcell \shift_counter[4] (
// Equation(s):
// shift_counter[4] = DFFEAS(((\shift_counter[3]~5  $ (!shift_counter[4]))), !GLOBAL(\SCKe~combout ), VCC, , , , , \SPI_CE~combout , )

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(shift_counter[4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\SPI_CE~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\shift_counter[3]~5 ),
	.cin1(\shift_counter[3]~5COUT1_14 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(shift_counter[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \shift_counter[4] .cin0_used = "true";
defparam \shift_counter[4] .cin1_used = "true";
defparam \shift_counter[4] .lut_mask = "f00f";
defparam \shift_counter[4] .operation_mode = "normal";
defparam \shift_counter[4] .output_mode = "reg_only";
defparam \shift_counter[4] .register_cascade_mode = "off";
defparam \shift_counter[4] .sum_lutc_input = "cin";
defparam \shift_counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N7
maxv_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (shift_counter[4] & (shift_counter[2] & (shift_counter[1] & shift_counter[3])))

	.clk(gnd),
	.dataa(shift_counter[4]),
	.datab(shift_counter[2]),
	.datac(shift_counter[1]),
	.datad(shift_counter[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = "8000";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .register_cascade_mode = "off";
defparam \Equal0~0 .sum_lutc_input = "datac";
defparam \Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N0
maxv_lcell \addr_counter[0] (
// Equation(s):
// addr_counter[0] = DFFEAS(addr_counter[0] $ ((((\Equal0~0_combout  & shift_counter[0])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[0]),
	.datab(vcc),
	.datac(\Equal0~0_combout ),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_counter[0] .lut_mask = "5aaa";
defparam \addr_counter[0] .operation_mode = "normal";
defparam \addr_counter[0] .output_mode = "reg_only";
defparam \addr_counter[0] .register_cascade_mode = "off";
defparam \addr_counter[0] .sum_lutc_input = "datac";
defparam \addr_counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N2
maxv_lcell \addr_spi[0] (
// Equation(s):
// addr_spi[0] = DFFEAS((shift_counter[0] & (((addr_spi[0])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[0])) # (!\Equal0~0_combout  & ((addr_spi[0]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[0]),
	.datab(addr_spi[0]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[0] .lut_mask = "cacc";
defparam \addr_spi[0] .operation_mode = "normal";
defparam \addr_spi[0] .output_mode = "reg_only";
defparam \addr_spi[0] .register_cascade_mode = "off";
defparam \addr_spi[0] .sum_lutc_input = "datac";
defparam \addr_spi[0] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_90,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \HS_CLK~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\HS_CLK~combout ),
	.padio(HS_CLK));
// synopsys translate_off
defparam \HS_CLK~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_91,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \TRIG~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\TRIG~combout ),
	.padio(TRIG));
// synopsys translate_off
defparam \TRIG~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y2_N1
maxv_lcell trig_last(
// Equation(s):
// \always2~0  = ((\TRIG~combout  & (!trig_last)))
// \trig_last~regout  = DFFEAS(\always2~0 , GLOBAL(\HS_CLK~combout ), VCC, , , \TRIG~combout , , , VCC)

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(\TRIG~combout ),
	.datac(\TRIG~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always2~0 ),
	.regout(\trig_last~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam trig_last.lut_mask = "0c0c";
defparam trig_last.operation_mode = "normal";
defparam trig_last.output_mode = "reg_and_comb";
defparam trig_last.register_cascade_mode = "off";
defparam trig_last.sum_lutc_input = "qfbk";
defparam trig_last.synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y2_N2
maxv_lcell \addr_burst[0] (
// Equation(s):
// addr_burst[0] = DFFEAS(((!addr_burst[0])), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[0]~1  = CARRY(((addr_burst[0])))
// \addr_burst[0]~1COUT1_35  = CARRY(((addr_burst[0])))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[0]),
	.cout(),
	.cout0(\addr_burst[0]~1 ),
	.cout1(\addr_burst[0]~1COUT1_35 ));
// synopsys translate_off
defparam \addr_burst[0] .lut_mask = "33cc";
defparam \addr_burst[0] .operation_mode = "arithmetic";
defparam \addr_burst[0] .output_mode = "reg_only";
defparam \addr_burst[0] .register_cascade_mode = "off";
defparam \addr_burst[0] .sum_lutc_input = "datac";
defparam \addr_burst[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N7
maxv_lcell \ADDR~0 (
// Equation(s):
// \ADDR~0_combout  = ((\trig_last~regout  & ((addr_burst[0]))) # (!\trig_last~regout  & (addr_spi[0])))

	.clk(gnd),
	.dataa(addr_spi[0]),
	.datab(addr_burst[0]),
	.datac(vcc),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~0 .lut_mask = "ccaa";
defparam \ADDR~0 .operation_mode = "normal";
defparam \ADDR~0 .output_mode = "comb_only";
defparam \ADDR~0 .register_cascade_mode = "off";
defparam \ADDR~0 .sum_lutc_input = "datac";
defparam \ADDR~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N8
maxv_lcell \Equal1~0 (
// Equation(s):
// \Equal1~0_combout  = (((shift_counter[0] & \Equal0~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~0 .lut_mask = "f000";
defparam \Equal1~0 .operation_mode = "normal";
defparam \Equal1~0 .output_mode = "comb_only";
defparam \Equal1~0 .register_cascade_mode = "off";
defparam \Equal1~0 .sum_lutc_input = "datac";
defparam \Equal1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxv_lcell \addr_counter[1] (
// Equation(s):
// addr_counter[1] = DFFEAS(addr_counter[0] $ ((addr_counter[1])), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[1]~1  = CARRY((addr_counter[0] & (addr_counter[1])))
// \addr_counter[1]~1COUT1_34  = CARRY((addr_counter[0] & (addr_counter[1])))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[0]),
	.datab(addr_counter[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[1]),
	.cout(),
	.cout0(\addr_counter[1]~1 ),
	.cout1(\addr_counter[1]~1COUT1_34 ));
// synopsys translate_off
defparam \addr_counter[1] .lut_mask = "6688";
defparam \addr_counter[1] .operation_mode = "arithmetic";
defparam \addr_counter[1] .output_mode = "reg_only";
defparam \addr_counter[1] .register_cascade_mode = "off";
defparam \addr_counter[1] .sum_lutc_input = "datac";
defparam \addr_counter[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxv_lcell \addr_spi[1] (
// Equation(s):
// addr_spi[1] = DFFEAS((shift_counter[0] & (((addr_spi[1])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[1])) # (!\Equal0~0_combout  & ((addr_spi[1]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(shift_counter[0]),
	.datab(addr_counter[1]),
	.datac(\Equal0~0_combout ),
	.datad(addr_spi[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[1] .lut_mask = "ef40";
defparam \addr_spi[1] .operation_mode = "normal";
defparam \addr_spi[1] .output_mode = "reg_only";
defparam \addr_spi[1] .register_cascade_mode = "off";
defparam \addr_spi[1] .sum_lutc_input = "datac";
defparam \addr_spi[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxv_lcell \addr_burst[1] (
// Equation(s):
// addr_burst[1] = DFFEAS(addr_burst[1] $ ((((\addr_burst[0]~1 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[1]~3  = CARRY(((!\addr_burst[0]~1 )) # (!addr_burst[1]))
// \addr_burst[1]~3COUT1_36  = CARRY(((!\addr_burst[0]~1COUT1_35 )) # (!addr_burst[1]))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\addr_burst[0]~1 ),
	.cin1(\addr_burst[0]~1COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[1]),
	.cout(),
	.cout0(\addr_burst[1]~3 ),
	.cout1(\addr_burst[1]~3COUT1_36 ));
// synopsys translate_off
defparam \addr_burst[1] .cin0_used = "true";
defparam \addr_burst[1] .cin1_used = "true";
defparam \addr_burst[1] .lut_mask = "5a5f";
defparam \addr_burst[1] .operation_mode = "arithmetic";
defparam \addr_burst[1] .output_mode = "reg_only";
defparam \addr_burst[1] .register_cascade_mode = "off";
defparam \addr_burst[1] .sum_lutc_input = "cin";
defparam \addr_burst[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N5
maxv_lcell \ADDR~1 (
// Equation(s):
// \ADDR~1_combout  = ((\trig_last~regout  & ((addr_burst[1]))) # (!\trig_last~regout  & (addr_spi[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_spi[1]),
	.datac(addr_burst[1]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~1 .lut_mask = "f0cc";
defparam \ADDR~1 .operation_mode = "normal";
defparam \ADDR~1 .output_mode = "comb_only";
defparam \ADDR~1 .register_cascade_mode = "off";
defparam \ADDR~1 .sum_lutc_input = "datac";
defparam \ADDR~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxv_lcell \addr_burst[2] (
// Equation(s):
// addr_burst[2] = DFFEAS(addr_burst[2] $ ((((!\addr_burst[1]~3 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[2]~5  = CARRY((addr_burst[2] & ((!\addr_burst[1]~3COUT1_36 ))))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\addr_burst[1]~3 ),
	.cin1(\addr_burst[1]~3COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[2]),
	.cout(\addr_burst[2]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_burst[2] .cin0_used = "true";
defparam \addr_burst[2] .cin1_used = "true";
defparam \addr_burst[2] .lut_mask = "a50a";
defparam \addr_burst[2] .operation_mode = "arithmetic";
defparam \addr_burst[2] .output_mode = "reg_only";
defparam \addr_burst[2] .register_cascade_mode = "off";
defparam \addr_burst[2] .sum_lutc_input = "cin";
defparam \addr_burst[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxv_lcell \addr_counter[2] (
// Equation(s):
// addr_counter[2] = DFFEAS(addr_counter[2] $ ((((\addr_counter[1]~1 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[2]~3  = CARRY(((!\addr_counter[1]~1 )) # (!addr_counter[2]))
// \addr_counter[2]~3COUT1_35  = CARRY(((!\addr_counter[1]~1COUT1_34 )) # (!addr_counter[2]))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(gnd),
	.cin0(\addr_counter[1]~1 ),
	.cin1(\addr_counter[1]~1COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[2]),
	.cout(),
	.cout0(\addr_counter[2]~3 ),
	.cout1(\addr_counter[2]~3COUT1_35 ));
// synopsys translate_off
defparam \addr_counter[2] .cin0_used = "true";
defparam \addr_counter[2] .cin1_used = "true";
defparam \addr_counter[2] .lut_mask = "5a5f";
defparam \addr_counter[2] .operation_mode = "arithmetic";
defparam \addr_counter[2] .output_mode = "reg_only";
defparam \addr_counter[2] .register_cascade_mode = "off";
defparam \addr_counter[2] .sum_lutc_input = "cin";
defparam \addr_counter[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N1
maxv_lcell \addr_spi[2] (
// Equation(s):
// addr_spi[2] = DFFEAS((shift_counter[0] & (((addr_spi[2])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[2])) # (!\Equal0~0_combout  & ((addr_spi[2]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[2]),
	.datab(addr_spi[2]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[2] .lut_mask = "cacc";
defparam \addr_spi[2] .operation_mode = "normal";
defparam \addr_spi[2] .output_mode = "reg_only";
defparam \addr_spi[2] .register_cascade_mode = "off";
defparam \addr_spi[2] .sum_lutc_input = "datac";
defparam \addr_spi[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N6
maxv_lcell \ADDR~2 (
// Equation(s):
// \ADDR~2_combout  = ((\trig_last~regout  & (addr_burst[2])) # (!\trig_last~regout  & ((addr_spi[2]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\trig_last~regout ),
	.datac(addr_burst[2]),
	.datad(addr_spi[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~2 .lut_mask = "f3c0";
defparam \ADDR~2 .operation_mode = "normal";
defparam \ADDR~2 .output_mode = "comb_only";
defparam \ADDR~2 .register_cascade_mode = "off";
defparam \ADDR~2 .sum_lutc_input = "datac";
defparam \ADDR~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxv_lcell \addr_burst[3] (
// Equation(s):
// addr_burst[3] = DFFEAS(addr_burst[3] $ ((((\addr_burst[2]~5 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[3]~7  = CARRY(((!\addr_burst[2]~5 )) # (!addr_burst[3]))
// \addr_burst[3]~7COUT1_37  = CARRY(((!\addr_burst[2]~5 )) # (!addr_burst[3]))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[2]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[3]),
	.cout(),
	.cout0(\addr_burst[3]~7 ),
	.cout1(\addr_burst[3]~7COUT1_37 ));
// synopsys translate_off
defparam \addr_burst[3] .cin_used = "true";
defparam \addr_burst[3] .lut_mask = "5a5f";
defparam \addr_burst[3] .operation_mode = "arithmetic";
defparam \addr_burst[3] .output_mode = "reg_only";
defparam \addr_burst[3] .register_cascade_mode = "off";
defparam \addr_burst[3] .sum_lutc_input = "cin";
defparam \addr_burst[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxv_lcell \addr_counter[3] (
// Equation(s):
// addr_counter[3] = DFFEAS((addr_counter[3] $ ((!\addr_counter[2]~3 ))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[3]~5  = CARRY(((addr_counter[3] & !\addr_counter[2]~3COUT1_35 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(gnd),
	.cin0(\addr_counter[2]~3 ),
	.cin1(\addr_counter[2]~3COUT1_35 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[3]),
	.cout(\addr_counter[3]~5 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_counter[3] .cin0_used = "true";
defparam \addr_counter[3] .cin1_used = "true";
defparam \addr_counter[3] .lut_mask = "c30c";
defparam \addr_counter[3] .operation_mode = "arithmetic";
defparam \addr_counter[3] .output_mode = "reg_only";
defparam \addr_counter[3] .register_cascade_mode = "off";
defparam \addr_counter[3] .sum_lutc_input = "cin";
defparam \addr_counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N7
maxv_lcell \addr_spi[3] (
// Equation(s):
// addr_spi[3] = DFFEAS((shift_counter[0] & (((addr_spi[3])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[3])) # (!\Equal0~0_combout  & ((addr_spi[3]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[3]),
	.datab(addr_spi[3]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[3] .lut_mask = "cacc";
defparam \addr_spi[3] .operation_mode = "normal";
defparam \addr_spi[3] .output_mode = "reg_only";
defparam \addr_spi[3] .register_cascade_mode = "off";
defparam \addr_spi[3] .sum_lutc_input = "datac";
defparam \addr_spi[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N8
maxv_lcell \ADDR~3 (
// Equation(s):
// \ADDR~3_combout  = ((\trig_last~regout  & (addr_burst[3])) # (!\trig_last~regout  & ((addr_spi[3]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\trig_last~regout ),
	.datac(addr_burst[3]),
	.datad(addr_spi[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~3 .lut_mask = "f3c0";
defparam \ADDR~3 .operation_mode = "normal";
defparam \ADDR~3 .output_mode = "comb_only";
defparam \ADDR~3 .register_cascade_mode = "off";
defparam \ADDR~3 .sum_lutc_input = "datac";
defparam \ADDR~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxv_lcell \addr_counter[4] (
// Equation(s):
// addr_counter[4] = DFFEAS(addr_counter[4] $ ((((\addr_counter[3]~5 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[4]~7  = CARRY(((!\addr_counter[3]~5 )) # (!addr_counter[4]))
// \addr_counter[4]~7COUT1_36  = CARRY(((!\addr_counter[3]~5 )) # (!addr_counter[4]))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[3]~5 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[4]),
	.cout(),
	.cout0(\addr_counter[4]~7 ),
	.cout1(\addr_counter[4]~7COUT1_36 ));
// synopsys translate_off
defparam \addr_counter[4] .cin_used = "true";
defparam \addr_counter[4] .lut_mask = "5a5f";
defparam \addr_counter[4] .operation_mode = "arithmetic";
defparam \addr_counter[4] .output_mode = "reg_only";
defparam \addr_counter[4] .register_cascade_mode = "off";
defparam \addr_counter[4] .sum_lutc_input = "cin";
defparam \addr_counter[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N4
maxv_lcell \addr_spi[4] (
// Equation(s):
// addr_spi[4] = DFFEAS((shift_counter[0] & (addr_spi[4])) # (!shift_counter[0] & ((\Equal0~0_combout  & ((addr_counter[4]))) # (!\Equal0~0_combout  & (addr_spi[4])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[4]),
	.datab(addr_counter[4]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[4] .lut_mask = "acaa";
defparam \addr_spi[4] .operation_mode = "normal";
defparam \addr_spi[4] .output_mode = "reg_only";
defparam \addr_spi[4] .register_cascade_mode = "off";
defparam \addr_spi[4] .sum_lutc_input = "datac";
defparam \addr_spi[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxv_lcell \addr_burst[4] (
// Equation(s):
// addr_burst[4] = DFFEAS(addr_burst[4] $ ((((!(!\addr_burst[2]~5  & \addr_burst[3]~7 ) # (\addr_burst[2]~5  & \addr_burst[3]~7COUT1_37 ))))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[4]~9  = CARRY((addr_burst[4] & ((!\addr_burst[3]~7 ))))
// \addr_burst[4]~9COUT1_38  = CARRY((addr_burst[4] & ((!\addr_burst[3]~7COUT1_37 ))))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[2]~5 ),
	.cin0(\addr_burst[3]~7 ),
	.cin1(\addr_burst[3]~7COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[4]),
	.cout(),
	.cout0(\addr_burst[4]~9 ),
	.cout1(\addr_burst[4]~9COUT1_38 ));
// synopsys translate_off
defparam \addr_burst[4] .cin0_used = "true";
defparam \addr_burst[4] .cin1_used = "true";
defparam \addr_burst[4] .cin_used = "true";
defparam \addr_burst[4] .lut_mask = "a50a";
defparam \addr_burst[4] .operation_mode = "arithmetic";
defparam \addr_burst[4] .output_mode = "reg_only";
defparam \addr_burst[4] .register_cascade_mode = "off";
defparam \addr_burst[4] .sum_lutc_input = "cin";
defparam \addr_burst[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N5
maxv_lcell \ADDR~4 (
// Equation(s):
// \ADDR~4_combout  = ((\trig_last~regout  & ((addr_burst[4]))) # (!\trig_last~regout  & (addr_spi[4])))

	.clk(gnd),
	.dataa(addr_spi[4]),
	.datab(vcc),
	.datac(addr_burst[4]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~4 .lut_mask = "f0aa";
defparam \ADDR~4 .operation_mode = "normal";
defparam \ADDR~4 .output_mode = "comb_only";
defparam \ADDR~4 .register_cascade_mode = "off";
defparam \ADDR~4 .sum_lutc_input = "datac";
defparam \ADDR~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxv_lcell \addr_burst[5] (
// Equation(s):
// addr_burst[5] = DFFEAS((addr_burst[5] $ (((!\addr_burst[2]~5  & \addr_burst[4]~9 ) # (\addr_burst[2]~5  & \addr_burst[4]~9COUT1_38 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[5]~11  = CARRY(((!\addr_burst[4]~9 ) # (!addr_burst[5])))
// \addr_burst[5]~11COUT1_39  = CARRY(((!\addr_burst[4]~9COUT1_38 ) # (!addr_burst[5])))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[2]~5 ),
	.cin0(\addr_burst[4]~9 ),
	.cin1(\addr_burst[4]~9COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[5]),
	.cout(),
	.cout0(\addr_burst[5]~11 ),
	.cout1(\addr_burst[5]~11COUT1_39 ));
// synopsys translate_off
defparam \addr_burst[5] .cin0_used = "true";
defparam \addr_burst[5] .cin1_used = "true";
defparam \addr_burst[5] .cin_used = "true";
defparam \addr_burst[5] .lut_mask = "3c3f";
defparam \addr_burst[5] .operation_mode = "arithmetic";
defparam \addr_burst[5] .output_mode = "reg_only";
defparam \addr_burst[5] .register_cascade_mode = "off";
defparam \addr_burst[5] .sum_lutc_input = "cin";
defparam \addr_burst[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxv_lcell \addr_counter[5] (
// Equation(s):
// addr_counter[5] = DFFEAS((addr_counter[5] $ ((!(!\addr_counter[3]~5  & \addr_counter[4]~7 ) # (\addr_counter[3]~5  & \addr_counter[4]~7COUT1_36 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[5]~9  = CARRY(((addr_counter[5] & !\addr_counter[4]~7 )))
// \addr_counter[5]~9COUT1_37  = CARRY(((addr_counter[5] & !\addr_counter[4]~7COUT1_36 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[3]~5 ),
	.cin0(\addr_counter[4]~7 ),
	.cin1(\addr_counter[4]~7COUT1_36 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[5]),
	.cout(),
	.cout0(\addr_counter[5]~9 ),
	.cout1(\addr_counter[5]~9COUT1_37 ));
// synopsys translate_off
defparam \addr_counter[5] .cin0_used = "true";
defparam \addr_counter[5] .cin1_used = "true";
defparam \addr_counter[5] .cin_used = "true";
defparam \addr_counter[5] .lut_mask = "c30c";
defparam \addr_counter[5] .operation_mode = "arithmetic";
defparam \addr_counter[5] .output_mode = "reg_only";
defparam \addr_counter[5] .register_cascade_mode = "off";
defparam \addr_counter[5] .sum_lutc_input = "cin";
defparam \addr_counter[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N6
maxv_lcell \addr_spi[5] (
// Equation(s):
// addr_spi[5] = DFFEAS((shift_counter[0] & (addr_spi[5])) # (!shift_counter[0] & ((\Equal0~0_combout  & ((addr_counter[5]))) # (!\Equal0~0_combout  & (addr_spi[5])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[5]),
	.datab(addr_counter[5]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[5] .lut_mask = "acaa";
defparam \addr_spi[5] .operation_mode = "normal";
defparam \addr_spi[5] .output_mode = "reg_only";
defparam \addr_spi[5] .register_cascade_mode = "off";
defparam \addr_spi[5] .sum_lutc_input = "datac";
defparam \addr_spi[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N9
maxv_lcell \ADDR~5 (
// Equation(s):
// \ADDR~5_combout  = ((\trig_last~regout  & (addr_burst[5])) # (!\trig_last~regout  & ((addr_spi[5]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\trig_last~regout ),
	.datac(addr_burst[5]),
	.datad(addr_spi[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~5 .lut_mask = "f3c0";
defparam \ADDR~5 .operation_mode = "normal";
defparam \ADDR~5 .output_mode = "comb_only";
defparam \ADDR~5 .register_cascade_mode = "off";
defparam \ADDR~5 .sum_lutc_input = "datac";
defparam \ADDR~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxv_lcell \addr_counter[6] (
// Equation(s):
// addr_counter[6] = DFFEAS((addr_counter[6] $ (((!\addr_counter[3]~5  & \addr_counter[5]~9 ) # (\addr_counter[3]~5  & \addr_counter[5]~9COUT1_37 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[6]~11  = CARRY(((!\addr_counter[5]~9 ) # (!addr_counter[6])))
// \addr_counter[6]~11COUT1_38  = CARRY(((!\addr_counter[5]~9COUT1_37 ) # (!addr_counter[6])))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[3]~5 ),
	.cin0(\addr_counter[5]~9 ),
	.cin1(\addr_counter[5]~9COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[6]),
	.cout(),
	.cout0(\addr_counter[6]~11 ),
	.cout1(\addr_counter[6]~11COUT1_38 ));
// synopsys translate_off
defparam \addr_counter[6] .cin0_used = "true";
defparam \addr_counter[6] .cin1_used = "true";
defparam \addr_counter[6] .cin_used = "true";
defparam \addr_counter[6] .lut_mask = "3c3f";
defparam \addr_counter[6] .operation_mode = "arithmetic";
defparam \addr_counter[6] .output_mode = "reg_only";
defparam \addr_counter[6] .register_cascade_mode = "off";
defparam \addr_counter[6] .sum_lutc_input = "cin";
defparam \addr_counter[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxv_lcell \addr_spi[6] (
// Equation(s):
// addr_spi[6] = DFFEAS((\Equal0~0_combout  & ((shift_counter[0] & (addr_spi[6])) # (!shift_counter[0] & ((addr_counter[6]))))) # (!\Equal0~0_combout  & (addr_spi[6])), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[6]),
	.datab(addr_counter[6]),
	.datac(\Equal0~0_combout ),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[6] .lut_mask = "aaca";
defparam \addr_spi[6] .operation_mode = "normal";
defparam \addr_spi[6] .output_mode = "reg_only";
defparam \addr_spi[6] .register_cascade_mode = "off";
defparam \addr_spi[6] .sum_lutc_input = "datac";
defparam \addr_spi[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxv_lcell \addr_burst[6] (
// Equation(s):
// addr_burst[6] = DFFEAS(addr_burst[6] $ ((((!(!\addr_burst[2]~5  & \addr_burst[5]~11 ) # (\addr_burst[2]~5  & \addr_burst[5]~11COUT1_39 ))))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[6]~13  = CARRY((addr_burst[6] & ((!\addr_burst[5]~11 ))))
// \addr_burst[6]~13COUT1_40  = CARRY((addr_burst[6] & ((!\addr_burst[5]~11COUT1_39 ))))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[2]~5 ),
	.cin0(\addr_burst[5]~11 ),
	.cin1(\addr_burst[5]~11COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[6]),
	.cout(),
	.cout0(\addr_burst[6]~13 ),
	.cout1(\addr_burst[6]~13COUT1_40 ));
// synopsys translate_off
defparam \addr_burst[6] .cin0_used = "true";
defparam \addr_burst[6] .cin1_used = "true";
defparam \addr_burst[6] .cin_used = "true";
defparam \addr_burst[6] .lut_mask = "a50a";
defparam \addr_burst[6] .operation_mode = "arithmetic";
defparam \addr_burst[6] .output_mode = "reg_only";
defparam \addr_burst[6] .register_cascade_mode = "off";
defparam \addr_burst[6] .sum_lutc_input = "cin";
defparam \addr_burst[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxv_lcell \ADDR~6 (
// Equation(s):
// \ADDR~6_combout  = (\trig_last~regout  & (((addr_burst[6])))) # (!\trig_last~regout  & (addr_spi[6]))

	.clk(gnd),
	.dataa(addr_spi[6]),
	.datab(addr_burst[6]),
	.datac(\trig_last~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~6 .lut_mask = "caca";
defparam \ADDR~6 .operation_mode = "normal";
defparam \ADDR~6 .output_mode = "comb_only";
defparam \ADDR~6 .register_cascade_mode = "off";
defparam \ADDR~6 .sum_lutc_input = "datac";
defparam \ADDR~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxv_lcell \addr_counter[7] (
// Equation(s):
// addr_counter[7] = DFFEAS((addr_counter[7] $ ((!(!\addr_counter[3]~5  & \addr_counter[6]~11 ) # (\addr_counter[3]~5  & \addr_counter[6]~11COUT1_38 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[7]~13  = CARRY(((addr_counter[7] & !\addr_counter[6]~11 )))
// \addr_counter[7]~13COUT1_39  = CARRY(((addr_counter[7] & !\addr_counter[6]~11COUT1_38 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[3]~5 ),
	.cin0(\addr_counter[6]~11 ),
	.cin1(\addr_counter[6]~11COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[7]),
	.cout(),
	.cout0(\addr_counter[7]~13 ),
	.cout1(\addr_counter[7]~13COUT1_39 ));
// synopsys translate_off
defparam \addr_counter[7] .cin0_used = "true";
defparam \addr_counter[7] .cin1_used = "true";
defparam \addr_counter[7] .cin_used = "true";
defparam \addr_counter[7] .lut_mask = "c30c";
defparam \addr_counter[7] .operation_mode = "arithmetic";
defparam \addr_counter[7] .output_mode = "reg_only";
defparam \addr_counter[7] .register_cascade_mode = "off";
defparam \addr_counter[7] .sum_lutc_input = "cin";
defparam \addr_counter[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxv_lcell \addr_spi[7] (
// Equation(s):
// addr_spi[7] = DFFEAS((\Equal0~0_combout  & ((shift_counter[0] & (addr_spi[7])) # (!shift_counter[0] & ((addr_counter[7]))))) # (!\Equal0~0_combout  & (addr_spi[7])), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[7]),
	.datab(\Equal0~0_combout ),
	.datac(addr_counter[7]),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[7] .lut_mask = "aae2";
defparam \addr_spi[7] .operation_mode = "normal";
defparam \addr_spi[7] .output_mode = "reg_only";
defparam \addr_spi[7] .register_cascade_mode = "off";
defparam \addr_spi[7] .sum_lutc_input = "datac";
defparam \addr_spi[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxv_lcell \addr_burst[7] (
// Equation(s):
// addr_burst[7] = DFFEAS((addr_burst[7] $ (((!\addr_burst[2]~5  & \addr_burst[6]~13 ) # (\addr_burst[2]~5  & \addr_burst[6]~13COUT1_40 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[7]~15  = CARRY(((!\addr_burst[6]~13COUT1_40 ) # (!addr_burst[7])))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[2]~5 ),
	.cin0(\addr_burst[6]~13 ),
	.cin1(\addr_burst[6]~13COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[7]),
	.cout(\addr_burst[7]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_burst[7] .cin0_used = "true";
defparam \addr_burst[7] .cin1_used = "true";
defparam \addr_burst[7] .cin_used = "true";
defparam \addr_burst[7] .lut_mask = "3c3f";
defparam \addr_burst[7] .operation_mode = "arithmetic";
defparam \addr_burst[7] .output_mode = "reg_only";
defparam \addr_burst[7] .register_cascade_mode = "off";
defparam \addr_burst[7] .sum_lutc_input = "cin";
defparam \addr_burst[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxv_lcell \ADDR~7 (
// Equation(s):
// \ADDR~7_combout  = ((\trig_last~regout  & ((addr_burst[7]))) # (!\trig_last~regout  & (addr_spi[7])))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_spi[7]),
	.datac(addr_burst[7]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~7 .lut_mask = "f0cc";
defparam \ADDR~7 .operation_mode = "normal";
defparam \ADDR~7 .output_mode = "comb_only";
defparam \ADDR~7 .register_cascade_mode = "off";
defparam \ADDR~7 .sum_lutc_input = "datac";
defparam \ADDR~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N0
maxv_lcell \addr_burst[8] (
// Equation(s):
// addr_burst[8] = DFFEAS((addr_burst[8] $ ((!\addr_burst[7]~15 ))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[8]~17  = CARRY(((addr_burst[8] & !\addr_burst[7]~15 )))
// \addr_burst[8]~17COUT1_41  = CARRY(((addr_burst[8] & !\addr_burst[7]~15 )))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[7]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[8]),
	.cout(),
	.cout0(\addr_burst[8]~17 ),
	.cout1(\addr_burst[8]~17COUT1_41 ));
// synopsys translate_off
defparam \addr_burst[8] .cin_used = "true";
defparam \addr_burst[8] .lut_mask = "c30c";
defparam \addr_burst[8] .operation_mode = "arithmetic";
defparam \addr_burst[8] .output_mode = "reg_only";
defparam \addr_burst[8] .register_cascade_mode = "off";
defparam \addr_burst[8] .sum_lutc_input = "cin";
defparam \addr_burst[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxv_lcell \addr_counter[8] (
// Equation(s):
// addr_counter[8] = DFFEAS((addr_counter[8] $ (((!\addr_counter[3]~5  & \addr_counter[7]~13 ) # (\addr_counter[3]~5  & \addr_counter[7]~13COUT1_39 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[8]~15  = CARRY(((!\addr_counter[7]~13COUT1_39 ) # (!addr_counter[8])))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[3]~5 ),
	.cin0(\addr_counter[7]~13 ),
	.cin1(\addr_counter[7]~13COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[8]),
	.cout(\addr_counter[8]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_counter[8] .cin0_used = "true";
defparam \addr_counter[8] .cin1_used = "true";
defparam \addr_counter[8] .cin_used = "true";
defparam \addr_counter[8] .lut_mask = "3c3f";
defparam \addr_counter[8] .operation_mode = "arithmetic";
defparam \addr_counter[8] .output_mode = "reg_only";
defparam \addr_counter[8] .register_cascade_mode = "off";
defparam \addr_counter[8] .sum_lutc_input = "cin";
defparam \addr_counter[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N0
maxv_lcell \addr_spi[8] (
// Equation(s):
// addr_spi[8] = DFFEAS((shift_counter[0] & (((addr_spi[8])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[8])) # (!\Equal0~0_combout  & ((addr_spi[8]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[8]),
	.datab(addr_spi[8]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[8] .lut_mask = "cacc";
defparam \addr_spi[8] .operation_mode = "normal";
defparam \addr_spi[8] .output_mode = "reg_only";
defparam \addr_spi[8] .register_cascade_mode = "off";
defparam \addr_spi[8] .sum_lutc_input = "datac";
defparam \addr_spi[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N9
maxv_lcell \ADDR~8 (
// Equation(s):
// \ADDR~8_combout  = ((\trig_last~regout  & (addr_burst[8])) # (!\trig_last~regout  & ((addr_spi[8]))))

	.clk(gnd),
	.dataa(addr_burst[8]),
	.datab(vcc),
	.datac(addr_spi[8]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~8 .lut_mask = "aaf0";
defparam \ADDR~8 .operation_mode = "normal";
defparam \ADDR~8 .output_mode = "comb_only";
defparam \ADDR~8 .register_cascade_mode = "off";
defparam \ADDR~8 .sum_lutc_input = "datac";
defparam \ADDR~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxv_lcell \addr_counter[9] (
// Equation(s):
// addr_counter[9] = DFFEAS((addr_counter[9] $ ((!\addr_counter[8]~15 ))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[9]~17  = CARRY(((addr_counter[9] & !\addr_counter[8]~15 )))
// \addr_counter[9]~17COUT1_40  = CARRY(((addr_counter[9] & !\addr_counter[8]~15 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[8]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[9]),
	.cout(),
	.cout0(\addr_counter[9]~17 ),
	.cout1(\addr_counter[9]~17COUT1_40 ));
// synopsys translate_off
defparam \addr_counter[9] .cin_used = "true";
defparam \addr_counter[9] .lut_mask = "c30c";
defparam \addr_counter[9] .operation_mode = "arithmetic";
defparam \addr_counter[9] .output_mode = "reg_only";
defparam \addr_counter[9] .register_cascade_mode = "off";
defparam \addr_counter[9] .sum_lutc_input = "cin";
defparam \addr_counter[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N7
maxv_lcell \addr_spi[9] (
// Equation(s):
// addr_spi[9] = DFFEAS((\Equal0~0_combout  & ((shift_counter[0] & ((addr_spi[9]))) # (!shift_counter[0] & (addr_counter[9])))) # (!\Equal0~0_combout  & (((addr_spi[9])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[9]),
	.datab(addr_spi[9]),
	.datac(\Equal0~0_combout ),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[9] .lut_mask = "ccac";
defparam \addr_spi[9] .operation_mode = "normal";
defparam \addr_spi[9] .output_mode = "reg_only";
defparam \addr_spi[9] .register_cascade_mode = "off";
defparam \addr_spi[9] .sum_lutc_input = "datac";
defparam \addr_spi[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N1
maxv_lcell \addr_burst[9] (
// Equation(s):
// addr_burst[9] = DFFEAS((addr_burst[9] $ (((!\addr_burst[7]~15  & \addr_burst[8]~17 ) # (\addr_burst[7]~15  & \addr_burst[8]~17COUT1_41 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[9]~19  = CARRY(((!\addr_burst[8]~17 ) # (!addr_burst[9])))
// \addr_burst[9]~19COUT1_42  = CARRY(((!\addr_burst[8]~17COUT1_41 ) # (!addr_burst[9])))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[7]~15 ),
	.cin0(\addr_burst[8]~17 ),
	.cin1(\addr_burst[8]~17COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[9]),
	.cout(),
	.cout0(\addr_burst[9]~19 ),
	.cout1(\addr_burst[9]~19COUT1_42 ));
// synopsys translate_off
defparam \addr_burst[9] .cin0_used = "true";
defparam \addr_burst[9] .cin1_used = "true";
defparam \addr_burst[9] .cin_used = "true";
defparam \addr_burst[9] .lut_mask = "3c3f";
defparam \addr_burst[9] .operation_mode = "arithmetic";
defparam \addr_burst[9] .output_mode = "reg_only";
defparam \addr_burst[9] .register_cascade_mode = "off";
defparam \addr_burst[9] .sum_lutc_input = "cin";
defparam \addr_burst[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxv_lcell \ADDR~9 (
// Equation(s):
// \ADDR~9_combout  = (\trig_last~regout  & (((addr_burst[9])))) # (!\trig_last~regout  & (addr_spi[9]))

	.clk(gnd),
	.dataa(\trig_last~regout ),
	.datab(addr_spi[9]),
	.datac(addr_burst[9]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~9 .lut_mask = "e4e4";
defparam \ADDR~9 .operation_mode = "normal";
defparam \ADDR~9 .output_mode = "comb_only";
defparam \ADDR~9 .register_cascade_mode = "off";
defparam \ADDR~9 .sum_lutc_input = "datac";
defparam \ADDR~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N2
maxv_lcell \addr_burst[10] (
// Equation(s):
// addr_burst[10] = DFFEAS((addr_burst[10] $ ((!(!\addr_burst[7]~15  & \addr_burst[9]~19 ) # (\addr_burst[7]~15  & \addr_burst[9]~19COUT1_42 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[10]~21  = CARRY(((addr_burst[10] & !\addr_burst[9]~19 )))
// \addr_burst[10]~21COUT1_43  = CARRY(((addr_burst[10] & !\addr_burst[9]~19COUT1_42 )))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[7]~15 ),
	.cin0(\addr_burst[9]~19 ),
	.cin1(\addr_burst[9]~19COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[10]),
	.cout(),
	.cout0(\addr_burst[10]~21 ),
	.cout1(\addr_burst[10]~21COUT1_43 ));
// synopsys translate_off
defparam \addr_burst[10] .cin0_used = "true";
defparam \addr_burst[10] .cin1_used = "true";
defparam \addr_burst[10] .cin_used = "true";
defparam \addr_burst[10] .lut_mask = "c30c";
defparam \addr_burst[10] .operation_mode = "arithmetic";
defparam \addr_burst[10] .output_mode = "reg_only";
defparam \addr_burst[10] .register_cascade_mode = "off";
defparam \addr_burst[10] .sum_lutc_input = "cin";
defparam \addr_burst[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxv_lcell \addr_counter[10] (
// Equation(s):
// addr_counter[10] = DFFEAS((addr_counter[10] $ (((!\addr_counter[8]~15  & \addr_counter[9]~17 ) # (\addr_counter[8]~15  & \addr_counter[9]~17COUT1_40 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[10]~19  = CARRY(((!\addr_counter[9]~17 ) # (!addr_counter[10])))
// \addr_counter[10]~19COUT1_41  = CARRY(((!\addr_counter[9]~17COUT1_40 ) # (!addr_counter[10])))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[8]~15 ),
	.cin0(\addr_counter[9]~17 ),
	.cin1(\addr_counter[9]~17COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[10]),
	.cout(),
	.cout0(\addr_counter[10]~19 ),
	.cout1(\addr_counter[10]~19COUT1_41 ));
// synopsys translate_off
defparam \addr_counter[10] .cin0_used = "true";
defparam \addr_counter[10] .cin1_used = "true";
defparam \addr_counter[10] .cin_used = "true";
defparam \addr_counter[10] .lut_mask = "3c3f";
defparam \addr_counter[10] .operation_mode = "arithmetic";
defparam \addr_counter[10] .output_mode = "reg_only";
defparam \addr_counter[10] .register_cascade_mode = "off";
defparam \addr_counter[10] .sum_lutc_input = "cin";
defparam \addr_counter[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N8
maxv_lcell \addr_spi[10] (
// Equation(s):
// addr_spi[10] = DFFEAS((shift_counter[0] & (addr_spi[10])) # (!shift_counter[0] & ((\Equal0~0_combout  & ((addr_counter[10]))) # (!\Equal0~0_combout  & (addr_spi[10])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[10]),
	.datab(addr_counter[10]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[10] .lut_mask = "acaa";
defparam \addr_spi[10] .operation_mode = "normal";
defparam \addr_spi[10] .output_mode = "reg_only";
defparam \addr_spi[10] .register_cascade_mode = "off";
defparam \addr_spi[10] .sum_lutc_input = "datac";
defparam \addr_spi[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N3
maxv_lcell \ADDR~10 (
// Equation(s):
// \ADDR~10_combout  = (\trig_last~regout  & (((addr_burst[10])))) # (!\trig_last~regout  & (((addr_spi[10]))))

	.clk(gnd),
	.dataa(\trig_last~regout ),
	.datab(vcc),
	.datac(addr_burst[10]),
	.datad(addr_spi[10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~10 .lut_mask = "f5a0";
defparam \ADDR~10 .operation_mode = "normal";
defparam \ADDR~10 .output_mode = "comb_only";
defparam \ADDR~10 .register_cascade_mode = "off";
defparam \ADDR~10 .sum_lutc_input = "datac";
defparam \ADDR~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N3
maxv_lcell \addr_burst[11] (
// Equation(s):
// addr_burst[11] = DFFEAS(addr_burst[11] $ (((((!\addr_burst[7]~15  & \addr_burst[10]~21 ) # (\addr_burst[7]~15  & \addr_burst[10]~21COUT1_43 ))))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[11]~23  = CARRY(((!\addr_burst[10]~21 )) # (!addr_burst[11]))
// \addr_burst[11]~23COUT1_44  = CARRY(((!\addr_burst[10]~21COUT1_43 )) # (!addr_burst[11]))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[7]~15 ),
	.cin0(\addr_burst[10]~21 ),
	.cin1(\addr_burst[10]~21COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[11]),
	.cout(),
	.cout0(\addr_burst[11]~23 ),
	.cout1(\addr_burst[11]~23COUT1_44 ));
// synopsys translate_off
defparam \addr_burst[11] .cin0_used = "true";
defparam \addr_burst[11] .cin1_used = "true";
defparam \addr_burst[11] .cin_used = "true";
defparam \addr_burst[11] .lut_mask = "5a5f";
defparam \addr_burst[11] .operation_mode = "arithmetic";
defparam \addr_burst[11] .output_mode = "reg_only";
defparam \addr_burst[11] .register_cascade_mode = "off";
defparam \addr_burst[11] .sum_lutc_input = "cin";
defparam \addr_burst[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxv_lcell \addr_counter[11] (
// Equation(s):
// addr_counter[11] = DFFEAS((addr_counter[11] $ ((!(!\addr_counter[8]~15  & \addr_counter[10]~19 ) # (\addr_counter[8]~15  & \addr_counter[10]~19COUT1_41 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[11]~21  = CARRY(((addr_counter[11] & !\addr_counter[10]~19 )))
// \addr_counter[11]~21COUT1_42  = CARRY(((addr_counter[11] & !\addr_counter[10]~19COUT1_41 )))

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[8]~15 ),
	.cin0(\addr_counter[10]~19 ),
	.cin1(\addr_counter[10]~19COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[11]),
	.cout(),
	.cout0(\addr_counter[11]~21 ),
	.cout1(\addr_counter[11]~21COUT1_42 ));
// synopsys translate_off
defparam \addr_counter[11] .cin0_used = "true";
defparam \addr_counter[11] .cin1_used = "true";
defparam \addr_counter[11] .cin_used = "true";
defparam \addr_counter[11] .lut_mask = "c30c";
defparam \addr_counter[11] .operation_mode = "arithmetic";
defparam \addr_counter[11] .output_mode = "reg_only";
defparam \addr_counter[11] .register_cascade_mode = "off";
defparam \addr_counter[11] .sum_lutc_input = "cin";
defparam \addr_counter[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N8
maxv_lcell \addr_spi[11] (
// Equation(s):
// addr_spi[11] = DFFEAS((\Equal0~0_combout  & ((shift_counter[0] & (addr_spi[11])) # (!shift_counter[0] & ((addr_counter[11]))))) # (!\Equal0~0_combout  & (addr_spi[11])), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[11]),
	.datab(addr_counter[11]),
	.datac(\Equal0~0_combout ),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[11] .lut_mask = "aaca";
defparam \addr_spi[11] .operation_mode = "normal";
defparam \addr_spi[11] .output_mode = "reg_only";
defparam \addr_spi[11] .register_cascade_mode = "off";
defparam \addr_spi[11] .sum_lutc_input = "datac";
defparam \addr_spi[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxv_lcell \ADDR~11 (
// Equation(s):
// \ADDR~11_combout  = ((\trig_last~regout  & (addr_burst[11])) # (!\trig_last~regout  & ((addr_spi[11]))))

	.clk(gnd),
	.dataa(addr_burst[11]),
	.datab(vcc),
	.datac(\trig_last~regout ),
	.datad(addr_spi[11]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~11 .lut_mask = "afa0";
defparam \ADDR~11 .operation_mode = "normal";
defparam \ADDR~11 .output_mode = "comb_only";
defparam \ADDR~11 .register_cascade_mode = "off";
defparam \ADDR~11 .sum_lutc_input = "datac";
defparam \ADDR~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxv_lcell \addr_counter[12] (
// Equation(s):
// addr_counter[12] = DFFEAS(addr_counter[12] $ (((((!\addr_counter[8]~15  & \addr_counter[11]~21 ) # (\addr_counter[8]~15  & \addr_counter[11]~21COUT1_42 ))))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[12]~23  = CARRY(((!\addr_counter[11]~21 )) # (!addr_counter[12]))
// \addr_counter[12]~23COUT1_43  = CARRY(((!\addr_counter[11]~21COUT1_42 )) # (!addr_counter[12]))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[8]~15 ),
	.cin0(\addr_counter[11]~21 ),
	.cin1(\addr_counter[11]~21COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[12]),
	.cout(),
	.cout0(\addr_counter[12]~23 ),
	.cout1(\addr_counter[12]~23COUT1_43 ));
// synopsys translate_off
defparam \addr_counter[12] .cin0_used = "true";
defparam \addr_counter[12] .cin1_used = "true";
defparam \addr_counter[12] .cin_used = "true";
defparam \addr_counter[12] .lut_mask = "5a5f";
defparam \addr_counter[12] .operation_mode = "arithmetic";
defparam \addr_counter[12] .output_mode = "reg_only";
defparam \addr_counter[12] .register_cascade_mode = "off";
defparam \addr_counter[12] .sum_lutc_input = "cin";
defparam \addr_counter[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxv_lcell \addr_spi[12] (
// Equation(s):
// addr_spi[12] = DFFEAS((shift_counter[0] & (addr_spi[12])) # (!shift_counter[0] & ((\Equal0~0_combout  & ((addr_counter[12]))) # (!\Equal0~0_combout  & (addr_spi[12])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(shift_counter[0]),
	.datab(addr_spi[12]),
	.datac(\Equal0~0_combout ),
	.datad(addr_counter[12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[12] .lut_mask = "dc8c";
defparam \addr_spi[12] .operation_mode = "normal";
defparam \addr_spi[12] .output_mode = "reg_only";
defparam \addr_spi[12] .register_cascade_mode = "off";
defparam \addr_spi[12] .sum_lutc_input = "datac";
defparam \addr_spi[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N4
maxv_lcell \addr_burst[12] (
// Equation(s):
// addr_burst[12] = DFFEAS(addr_burst[12] $ ((((!(!\addr_burst[7]~15  & \addr_burst[11]~23 ) # (\addr_burst[7]~15  & \addr_burst[11]~23COUT1_44 ))))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[12]~25  = CARRY((addr_burst[12] & ((!\addr_burst[11]~23COUT1_44 ))))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[7]~15 ),
	.cin0(\addr_burst[11]~23 ),
	.cin1(\addr_burst[11]~23COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[12]),
	.cout(\addr_burst[12]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_burst[12] .cin0_used = "true";
defparam \addr_burst[12] .cin1_used = "true";
defparam \addr_burst[12] .cin_used = "true";
defparam \addr_burst[12] .lut_mask = "a50a";
defparam \addr_burst[12] .operation_mode = "arithmetic";
defparam \addr_burst[12] .output_mode = "reg_only";
defparam \addr_burst[12] .register_cascade_mode = "off";
defparam \addr_burst[12] .sum_lutc_input = "cin";
defparam \addr_burst[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxv_lcell \ADDR~12 (
// Equation(s):
// \ADDR~12_combout  = (\trig_last~regout  & (((addr_burst[12])))) # (!\trig_last~regout  & (addr_spi[12]))

	.clk(gnd),
	.dataa(\trig_last~regout ),
	.datab(addr_spi[12]),
	.datac(addr_burst[12]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~12 .lut_mask = "e4e4";
defparam \ADDR~12 .operation_mode = "normal";
defparam \ADDR~12 .output_mode = "comb_only";
defparam \ADDR~12 .register_cascade_mode = "off";
defparam \ADDR~12 .sum_lutc_input = "datac";
defparam \ADDR~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxv_lcell \addr_counter[13] (
// Equation(s):
// addr_counter[13] = DFFEAS(addr_counter[13] $ ((((!(!\addr_counter[8]~15  & \addr_counter[12]~23 ) # (\addr_counter[8]~15  & \addr_counter[12]~23COUT1_43 ))))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[13]~25  = CARRY((addr_counter[13] & ((!\addr_counter[12]~23COUT1_43 ))))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[8]~15 ),
	.cin0(\addr_counter[12]~23 ),
	.cin1(\addr_counter[12]~23COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[13]),
	.cout(\addr_counter[13]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_counter[13] .cin0_used = "true";
defparam \addr_counter[13] .cin1_used = "true";
defparam \addr_counter[13] .cin_used = "true";
defparam \addr_counter[13] .lut_mask = "a50a";
defparam \addr_counter[13] .operation_mode = "arithmetic";
defparam \addr_counter[13] .output_mode = "reg_only";
defparam \addr_counter[13] .register_cascade_mode = "off";
defparam \addr_counter[13] .sum_lutc_input = "cin";
defparam \addr_counter[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxv_lcell \addr_spi[13] (
// Equation(s):
// addr_spi[13] = DFFEAS((\Equal0~0_combout  & ((shift_counter[0] & (addr_spi[13])) # (!shift_counter[0] & ((addr_counter[13]))))) # (!\Equal0~0_combout  & (addr_spi[13])), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[13]),
	.datab(addr_counter[13]),
	.datac(\Equal0~0_combout ),
	.datad(shift_counter[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[13] .lut_mask = "aaca";
defparam \addr_spi[13] .operation_mode = "normal";
defparam \addr_spi[13] .output_mode = "reg_only";
defparam \addr_spi[13] .register_cascade_mode = "off";
defparam \addr_spi[13] .sum_lutc_input = "datac";
defparam \addr_spi[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N5
maxv_lcell \addr_burst[13] (
// Equation(s):
// addr_burst[13] = DFFEAS(addr_burst[13] $ ((((\addr_burst[12]~25 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[13]~27  = CARRY(((!\addr_burst[12]~25 )) # (!addr_burst[13]))
// \addr_burst[13]~27COUT1_45  = CARRY(((!\addr_burst[12]~25 )) # (!addr_burst[13]))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[12]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[13]),
	.cout(),
	.cout0(\addr_burst[13]~27 ),
	.cout1(\addr_burst[13]~27COUT1_45 ));
// synopsys translate_off
defparam \addr_burst[13] .cin_used = "true";
defparam \addr_burst[13] .lut_mask = "5a5f";
defparam \addr_burst[13] .operation_mode = "arithmetic";
defparam \addr_burst[13] .output_mode = "reg_only";
defparam \addr_burst[13] .register_cascade_mode = "off";
defparam \addr_burst[13] .sum_lutc_input = "cin";
defparam \addr_burst[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y2_N9
maxv_lcell \ADDR~13 (
// Equation(s):
// \ADDR~13_combout  = ((\trig_last~regout  & ((addr_burst[13]))) # (!\trig_last~regout  & (addr_spi[13])))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_spi[13]),
	.datac(addr_burst[13]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~13 .lut_mask = "f0cc";
defparam \ADDR~13 .operation_mode = "normal";
defparam \ADDR~13 .output_mode = "comb_only";
defparam \ADDR~13 .register_cascade_mode = "off";
defparam \ADDR~13 .sum_lutc_input = "datac";
defparam \ADDR~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxv_lcell \addr_counter[14] (
// Equation(s):
// addr_counter[14] = DFFEAS(addr_counter[14] $ ((((\addr_counter[13]~25 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[14]~27  = CARRY(((!\addr_counter[13]~25 )) # (!addr_counter[14]))
// \addr_counter[14]~27COUT1_44  = CARRY(((!\addr_counter[13]~25 )) # (!addr_counter[14]))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[13]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[14]),
	.cout(),
	.cout0(\addr_counter[14]~27 ),
	.cout1(\addr_counter[14]~27COUT1_44 ));
// synopsys translate_off
defparam \addr_counter[14] .cin_used = "true";
defparam \addr_counter[14] .lut_mask = "5a5f";
defparam \addr_counter[14] .operation_mode = "arithmetic";
defparam \addr_counter[14] .output_mode = "reg_only";
defparam \addr_counter[14] .register_cascade_mode = "off";
defparam \addr_counter[14] .sum_lutc_input = "cin";
defparam \addr_counter[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxv_lcell \addr_spi[14] (
// Equation(s):
// addr_spi[14] = DFFEAS((shift_counter[0] & (addr_spi[14])) # (!shift_counter[0] & ((\Equal0~0_combout  & ((addr_counter[14]))) # (!\Equal0~0_combout  & (addr_spi[14])))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_spi[14]),
	.datab(addr_counter[14]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[14] .lut_mask = "acaa";
defparam \addr_spi[14] .operation_mode = "normal";
defparam \addr_spi[14] .output_mode = "reg_only";
defparam \addr_spi[14] .register_cascade_mode = "off";
defparam \addr_spi[14] .sum_lutc_input = "datac";
defparam \addr_spi[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N6
maxv_lcell \addr_burst[14] (
// Equation(s):
// addr_burst[14] = DFFEAS(addr_burst[14] $ ((((!(!\addr_burst[12]~25  & \addr_burst[13]~27 ) # (\addr_burst[12]~25  & \addr_burst[13]~27COUT1_45 ))))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[14]~29  = CARRY((addr_burst[14] & ((!\addr_burst[13]~27 ))))
// \addr_burst[14]~29COUT1_46  = CARRY((addr_burst[14] & ((!\addr_burst[13]~27COUT1_45 ))))

	.clk(\HS_CLK~combout ),
	.dataa(addr_burst[14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[12]~25 ),
	.cin0(\addr_burst[13]~27 ),
	.cin1(\addr_burst[13]~27COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[14]),
	.cout(),
	.cout0(\addr_burst[14]~29 ),
	.cout1(\addr_burst[14]~29COUT1_46 ));
// synopsys translate_off
defparam \addr_burst[14] .cin0_used = "true";
defparam \addr_burst[14] .cin1_used = "true";
defparam \addr_burst[14] .cin_used = "true";
defparam \addr_burst[14] .lut_mask = "a50a";
defparam \addr_burst[14] .operation_mode = "arithmetic";
defparam \addr_burst[14] .output_mode = "reg_only";
defparam \addr_burst[14] .register_cascade_mode = "off";
defparam \addr_burst[14] .sum_lutc_input = "cin";
defparam \addr_burst[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxv_lcell \ADDR~14 (
// Equation(s):
// \ADDR~14_combout  = ((\trig_last~regout  & ((addr_burst[14]))) # (!\trig_last~regout  & (addr_spi[14])))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_spi[14]),
	.datac(addr_burst[14]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~14 .lut_mask = "f0cc";
defparam \ADDR~14 .operation_mode = "normal";
defparam \ADDR~14 .output_mode = "comb_only";
defparam \ADDR~14 .register_cascade_mode = "off";
defparam \ADDR~14 .sum_lutc_input = "datac";
defparam \ADDR~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxv_lcell \addr_counter[15] (
// Equation(s):
// addr_counter[15] = DFFEAS(addr_counter[15] $ ((((!(!\addr_counter[13]~25  & \addr_counter[14]~27 ) # (\addr_counter[13]~25  & \addr_counter[14]~27COUT1_44 ))))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )
// \addr_counter[15]~29  = CARRY((addr_counter[15] & ((!\addr_counter[14]~27 ))))
// \addr_counter[15]~29COUT1_45  = CARRY((addr_counter[15] & ((!\addr_counter[14]~27COUT1_44 ))))

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[13]~25 ),
	.cin0(\addr_counter[14]~27 ),
	.cin1(\addr_counter[14]~27COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[15]),
	.cout(),
	.cout0(\addr_counter[15]~29 ),
	.cout1(\addr_counter[15]~29COUT1_45 ));
// synopsys translate_off
defparam \addr_counter[15] .cin0_used = "true";
defparam \addr_counter[15] .cin1_used = "true";
defparam \addr_counter[15] .cin_used = "true";
defparam \addr_counter[15] .lut_mask = "a50a";
defparam \addr_counter[15] .operation_mode = "arithmetic";
defparam \addr_counter[15] .output_mode = "reg_only";
defparam \addr_counter[15] .register_cascade_mode = "off";
defparam \addr_counter[15] .sum_lutc_input = "cin";
defparam \addr_counter[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxv_lcell \addr_spi[15] (
// Equation(s):
// addr_spi[15] = DFFEAS((shift_counter[0] & (((addr_spi[15])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[15])) # (!\Equal0~0_combout  & ((addr_spi[15]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[15]),
	.datab(addr_spi[15]),
	.datac(shift_counter[0]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[15] .lut_mask = "cacc";
defparam \addr_spi[15] .operation_mode = "normal";
defparam \addr_spi[15] .output_mode = "reg_only";
defparam \addr_spi[15] .register_cascade_mode = "off";
defparam \addr_spi[15] .sum_lutc_input = "datac";
defparam \addr_spi[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N7
maxv_lcell \addr_burst[15] (
// Equation(s):
// addr_burst[15] = DFFEAS((addr_burst[15] $ (((!\addr_burst[12]~25  & \addr_burst[14]~29 ) # (\addr_burst[12]~25  & \addr_burst[14]~29COUT1_46 )))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )
// \addr_burst[15]~31  = CARRY(((!\addr_burst[14]~29 ) # (!addr_burst[15])))
// \addr_burst[15]~31COUT1_47  = CARRY(((!\addr_burst[14]~29COUT1_46 ) # (!addr_burst[15])))

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(addr_burst[15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[12]~25 ),
	.cin0(\addr_burst[14]~29 ),
	.cin1(\addr_burst[14]~29COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[15]),
	.cout(),
	.cout0(\addr_burst[15]~31 ),
	.cout1(\addr_burst[15]~31COUT1_47 ));
// synopsys translate_off
defparam \addr_burst[15] .cin0_used = "true";
defparam \addr_burst[15] .cin1_used = "true";
defparam \addr_burst[15] .cin_used = "true";
defparam \addr_burst[15] .lut_mask = "3c3f";
defparam \addr_burst[15] .operation_mode = "arithmetic";
defparam \addr_burst[15] .output_mode = "reg_only";
defparam \addr_burst[15] .register_cascade_mode = "off";
defparam \addr_burst[15] .sum_lutc_input = "cin";
defparam \addr_burst[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxv_lcell \ADDR~15 (
// Equation(s):
// \ADDR~15_combout  = ((\trig_last~regout  & ((addr_burst[15]))) # (!\trig_last~regout  & (addr_spi[15])))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_spi[15]),
	.datac(addr_burst[15]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~15 .lut_mask = "f0cc";
defparam \ADDR~15 .operation_mode = "normal";
defparam \ADDR~15 .output_mode = "comb_only";
defparam \ADDR~15 .register_cascade_mode = "off";
defparam \ADDR~15 .sum_lutc_input = "datac";
defparam \ADDR~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N8
maxv_lcell \addr_burst[16] (
// Equation(s):
// addr_burst[16] = DFFEAS((((!\addr_burst[12]~25  & \addr_burst[15]~31 ) # (\addr_burst[12]~25  & \addr_burst[15]~31COUT1_47 ) $ (!addr_burst[16]))), GLOBAL(\HS_CLK~combout ), VCC, , , , , \always2~0 , )

	.clk(\HS_CLK~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(addr_burst[16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\always2~0 ),
	.sload(gnd),
	.ena(vcc),
	.cin(\addr_burst[12]~25 ),
	.cin0(\addr_burst[15]~31 ),
	.cin1(\addr_burst[15]~31COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_burst[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_burst[16] .cin0_used = "true";
defparam \addr_burst[16] .cin1_used = "true";
defparam \addr_burst[16] .cin_used = "true";
defparam \addr_burst[16] .lut_mask = "f00f";
defparam \addr_burst[16] .operation_mode = "normal";
defparam \addr_burst[16] .output_mode = "reg_only";
defparam \addr_burst[16] .register_cascade_mode = "off";
defparam \addr_burst[16] .sum_lutc_input = "cin";
defparam \addr_burst[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxv_lcell \addr_counter[16] (
// Equation(s):
// addr_counter[16] = DFFEAS((addr_counter[16] $ (((!\addr_counter[13]~25  & \addr_counter[15]~29 ) # (\addr_counter[13]~25  & \addr_counter[15]~29COUT1_45 )))), !GLOBAL(\SCKe~combout ), VCC, , \Equal1~0_combout , , , , )

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(addr_counter[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal1~0_combout ),
	.cin(\addr_counter[13]~25 ),
	.cin0(\addr_counter[15]~29 ),
	.cin1(\addr_counter[15]~29COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_counter[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_counter[16] .cin0_used = "true";
defparam \addr_counter[16] .cin1_used = "true";
defparam \addr_counter[16] .cin_used = "true";
defparam \addr_counter[16] .lut_mask = "3c3c";
defparam \addr_counter[16] .operation_mode = "normal";
defparam \addr_counter[16] .output_mode = "reg_only";
defparam \addr_counter[16] .register_cascade_mode = "off";
defparam \addr_counter[16] .sum_lutc_input = "cin";
defparam \addr_counter[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxv_lcell \addr_spi[16] (
// Equation(s):
// addr_spi[16] = DFFEAS((shift_counter[0] & (((addr_spi[16])))) # (!shift_counter[0] & ((\Equal0~0_combout  & (addr_counter[16])) # (!\Equal0~0_combout  & ((addr_spi[16]))))), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(addr_counter[16]),
	.datab(shift_counter[0]),
	.datac(addr_spi[16]),
	.datad(\Equal0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(addr_spi[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \addr_spi[16] .lut_mask = "e2f0";
defparam \addr_spi[16] .operation_mode = "normal";
defparam \addr_spi[16] .output_mode = "reg_only";
defparam \addr_spi[16] .register_cascade_mode = "off";
defparam \addr_spi[16] .sum_lutc_input = "datac";
defparam \addr_spi[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxv_lcell \ADDR~16 (
// Equation(s):
// \ADDR~16_combout  = ((\trig_last~regout  & (addr_burst[16])) # (!\trig_last~regout  & ((addr_spi[16]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(addr_burst[16]),
	.datac(addr_spi[16]),
	.datad(\trig_last~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\ADDR~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \ADDR~16 .lut_mask = "ccf0";
defparam \ADDR~16 .operation_mode = "normal";
defparam \ADDR~16 .output_mode = "comb_only";
defparam \ADDR~16 .register_cascade_mode = "off";
defparam \ADDR~16 .sum_lutc_input = "datac";
defparam \ADDR~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N9
maxv_lcell \GW~reg0 (
// Equation(s):
// \GW~reg0_regout  = DFFEAS((((!shift_counter[0] & \GW~reg0_regout )) # (!\Equal0~0_combout )), !GLOBAL(\SCKe~combout ), VCC, , , , , , )

	.clk(!\SCKe~combout ),
	.dataa(vcc),
	.datab(shift_counter[0]),
	.datac(\Equal0~0_combout ),
	.datad(\GW~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\GW~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \GW~reg0 .lut_mask = "3f0f";
defparam \GW~reg0 .operation_mode = "normal";
defparam \GW~reg0 .output_mode = "reg_only";
defparam \GW~reg0 .register_cascade_mode = "off";
defparam \GW~reg0 .sum_lutc_input = "datac";
defparam \GW~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N3
maxv_lcell \SRAM_CLK~0 (
// Equation(s):
// \SRAM_CLK~0_combout  = ((\TRIG~combout  & (\HS_CLK~combout )) # (!\TRIG~combout  & ((\SCKe~combout ))))

	.clk(gnd),
	.dataa(\HS_CLK~combout ),
	.datab(vcc),
	.datac(\SCKe~combout ),
	.datad(\TRIG~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\SRAM_CLK~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \SRAM_CLK~0 .lut_mask = "aaf0";
defparam \SRAM_CLK~0 .operation_mode = "normal";
defparam \SRAM_CLK~0 .output_mode = "comb_only";
defparam \SRAM_CLK~0 .register_cascade_mode = "off";
defparam \SRAM_CLK~0 .sum_lutc_input = "datac";
defparam \SRAM_CLK~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[0]~I (
	.datain(\ADDR~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[0]));
// synopsys translate_off
defparam \ADDR[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[1]~I (
	.datain(\ADDR~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[1]));
// synopsys translate_off
defparam \ADDR[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_54,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[2]~I (
	.datain(\ADDR~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[2]));
// synopsys translate_off
defparam \ADDR[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_55,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[3]~I (
	.datain(\ADDR~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[3]));
// synopsys translate_off
defparam \ADDR[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_56,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[4]~I (
	.datain(\ADDR~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[4]));
// synopsys translate_off
defparam \ADDR[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_57,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[5]~I (
	.datain(\ADDR~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[5]));
// synopsys translate_off
defparam \ADDR[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_58,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[6]~I (
	.datain(\ADDR~6_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[6]));
// synopsys translate_off
defparam \ADDR[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_61,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[7]~I (
	.datain(\ADDR~7_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[7]));
// synopsys translate_off
defparam \ADDR[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[8]~I (
	.datain(\ADDR~8_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[8]));
// synopsys translate_off
defparam \ADDR[8]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[9]~I (
	.datain(\ADDR~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[9]));
// synopsys translate_off
defparam \ADDR[9]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[10]~I (
	.datain(\ADDR~10_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[10]));
// synopsys translate_off
defparam \ADDR[10]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[11]~I (
	.datain(\ADDR~11_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[11]));
// synopsys translate_off
defparam \ADDR[11]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[12]~I (
	.datain(\ADDR~12_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[12]));
// synopsys translate_off
defparam \ADDR[12]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_62,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[13]~I (
	.datain(\ADDR~13_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[13]));
// synopsys translate_off
defparam \ADDR[13]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[14]~I (
	.datain(\ADDR~14_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[14]));
// synopsys translate_off
defparam \ADDR[14]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[15]~I (
	.datain(\ADDR~15_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[15]));
// synopsys translate_off
defparam \ADDR[15]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADDR[16]~I (
	.datain(\ADDR~16_combout ),
	.oe(vcc),
	.combout(),
	.padio(ADDR[16]));
// synopsys translate_off
defparam \ADDR[16]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_71,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[0]~I (
	.datain(addr_spi[0]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[0]));
// synopsys translate_off
defparam \DATA[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_72,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[1]~I (
	.datain(addr_spi[1]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[1]));
// synopsys translate_off
defparam \DATA[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_73,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[2]~I (
	.datain(addr_spi[2]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[2]));
// synopsys translate_off
defparam \DATA[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[3]~I (
	.datain(addr_spi[3]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[3]));
// synopsys translate_off
defparam \DATA[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_75,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[4]~I (
	.datain(addr_spi[4]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[4]));
// synopsys translate_off
defparam \DATA[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_76,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[5]~I (
	.datain(addr_spi[5]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[5]));
// synopsys translate_off
defparam \DATA[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_77,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[6]~I (
	.datain(addr_spi[6]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[6]));
// synopsys translate_off
defparam \DATA[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_78,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[7]~I (
	.datain(addr_spi[7]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[7]));
// synopsys translate_off
defparam \DATA[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_50,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[8]~I (
	.datain(addr_spi[8]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[8]));
// synopsys translate_off
defparam \DATA[8]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_47,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[9]~I (
	.datain(addr_spi[9]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[9]));
// synopsys translate_off
defparam \DATA[9]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_64,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[10]~I (
	.datain(addr_spi[10]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[10]));
// synopsys translate_off
defparam \DATA[10]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[11]~I (
	.datain(addr_spi[11]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[11]));
// synopsys translate_off
defparam \DATA[11]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_43,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[12]~I (
	.datain(addr_spi[12]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[12]));
// synopsys translate_off
defparam \DATA[12]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_44,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[13]~I (
	.datain(addr_spi[13]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[13]));
// synopsys translate_off
defparam \DATA[13]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[14]~I (
	.datain(addr_spi[14]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[14]));
// synopsys translate_off
defparam \DATA[14]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[15]~I (
	.datain(addr_spi[15]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[15]));
// synopsys translate_off
defparam \DATA[15]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[16]~I (
	.datain(addr_spi[16]),
	.oe(!\GW~reg0_regout ),
	.combout(),
	.padio(DATA[16]));
// synopsys translate_off
defparam \DATA[16]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[17]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[17]));
// synopsys translate_off
defparam \DATA[17]~I .open_drain_output = "true";
defparam \DATA[17]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_33,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[18]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[18]));
// synopsys translate_off
defparam \DATA[18]~I .open_drain_output = "true";
defparam \DATA[18]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_51,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[19]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[19]));
// synopsys translate_off
defparam \DATA[19]~I .open_drain_output = "true";
defparam \DATA[19]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[20]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[20]));
// synopsys translate_off
defparam \DATA[20]~I .open_drain_output = "true";
defparam \DATA[20]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[21]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[21]));
// synopsys translate_off
defparam \DATA[21]~I .open_drain_output = "true";
defparam \DATA[21]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_35,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[22]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[22]));
// synopsys translate_off
defparam \DATA[22]~I .open_drain_output = "true";
defparam \DATA[22]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[23]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[23]));
// synopsys translate_off
defparam \DATA[23]~I .open_drain_output = "true";
defparam \DATA[23]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[24]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[24]));
// synopsys translate_off
defparam \DATA[24]~I .open_drain_output = "true";
defparam \DATA[24]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[25]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[25]));
// synopsys translate_off
defparam \DATA[25]~I .open_drain_output = "true";
defparam \DATA[25]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[26]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[26]));
// synopsys translate_off
defparam \DATA[26]~I .open_drain_output = "true";
defparam \DATA[26]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_41,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[27]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[27]));
// synopsys translate_off
defparam \DATA[27]~I .open_drain_output = "true";
defparam \DATA[27]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[28]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[28]));
// synopsys translate_off
defparam \DATA[28]~I .open_drain_output = "true";
defparam \DATA[28]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_39,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[29]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[29]));
// synopsys translate_off
defparam \DATA[29]~I .open_drain_output = "true";
defparam \DATA[29]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[30]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[30]));
// synopsys translate_off
defparam \DATA[30]~I .open_drain_output = "true";
defparam \DATA[30]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA[31]~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(DATA[31]));
// synopsys translate_off
defparam \DATA[31]~I .open_drain_output = "true";
defparam \DATA[31]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_89,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \SRAM_CLK~I (
	.datain(\SRAM_CLK~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(SRAM_CLK));
// synopsys translate_off
defparam \SRAM_CLK~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_81,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADSC~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ADSC));
// synopsys translate_off
defparam \ADSC~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_87,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADSP~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(ADSP));
// synopsys translate_off
defparam \ADSP~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_88,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ADV~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(ADV));
// synopsys translate_off
defparam \ADV~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_83,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \BWE~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(BWE));
// synopsys translate_off
defparam \BWE~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_86,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \CE[0]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(CE[0]));
// synopsys translate_off
defparam \CE[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \CE[1]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(CE[1]));
// synopsys translate_off
defparam \CE[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_85,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \CE[2]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(CE[2]));
// synopsys translate_off
defparam \CE[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA_P[0]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(DATA_P[0]));
// synopsys translate_off
defparam \DATA_P[0]~I .open_drain_output = "true";
defparam \DATA_P[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_27,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA_P[1]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(DATA_P[1]));
// synopsys translate_off
defparam \DATA_P[1]~I .open_drain_output = "true";
defparam \DATA_P[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_29,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA_P[2]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(DATA_P[2]));
// synopsys translate_off
defparam \DATA_P[2]~I .open_drain_output = "true";
defparam \DATA_P[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \DATA_P[3]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(DATA_P[3]));
// synopsys translate_off
defparam \DATA_P[3]~I .open_drain_output = "true";
defparam \DATA_P[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_84,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \GW~I (
	.datain(\GW~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(GW));
// synopsys translate_off
defparam \GW~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \MODE~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(MODE));
// synopsys translate_off
defparam \MODE~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_82,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \OE~I (
	.datain(!\TRIG~combout ),
	.oe(vcc),
	.combout(),
	.padio(OE));
// synopsys translate_off
defparam \OE~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \ZZ~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(ZZ));
// synopsys translate_off
defparam \ZZ~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_95,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \MOSI~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(MOSI));
// synopsys translate_off
defparam \MOSI~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_28,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxv_io \MISO~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(MISO));
// synopsys translate_off
defparam \MISO~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxv_io \CLOCK_50~I (
	.datain(gnd),
	.oe(gnd),
	.combout(),
	.padio(CLOCK_50));
// synopsys translate_off
defparam \CLOCK_50~I .operation_mode = "input";
// synopsys translate_on

endmodule
